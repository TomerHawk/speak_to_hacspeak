{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/baba/Desktop/rust/speak_to_hacspec","program":"/home/baba/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":[],"output":"/home/baba/Desktop/rust/speak_to_hacspec/target/rls/debug/deps/libsecret_integers-15fa8e6e9b188574.rmeta"},"prelude":{"crate_id":{"name":"secret_integers","disambiguator":[10471624273456525483,13264337109646876065]},"crate_root":"hacspec/secret-integers/src","external_crates":[{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/baba/Desktop/rust/speak_to_hacspec/hacspec/secret-integers/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}}],"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":0,"byte_end":21410,"line_start":1,"line_end":646,"column_start":1,"column_end":49}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":11199},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2755,"byte_end":2763,"line_start":75,"line_end":75,"column_start":15,"column_end":23},"alias_span":null,"name":"Wrapping","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2779,"byte_end":2780,"line_start":76,"line_end":76,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"Mul, SubAssign, Not, BitOrAssign, BitAnd, ShrAssign, Shl, MulAssign, Add, BitXor, BitAndAssign, ShlAssign, Sub, AddAssign, BitXorAssign, BitOr, Shr, Neg","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":0,"byte_end":21410,"line_start":1,"line_end":646,"column_start":1,"column_end":49},"name":"","qualname":"::","value":"hacspec/secret-integers/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":67},{"krate":0,"index":73},{"krate":0,"index":72},{"krate":0,"index":70},{"krate":0,"index":28},{"krate":0,"index":56},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":58},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":173},{"krate":0,"index":179},{"krate":0,"index":178},{"krate":0,"index":176},{"krate":0,"index":134},{"krate":0,"index":162},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":164},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":284},{"krate":0,"index":282},{"krate":0,"index":240},{"krate":0,"index":268},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":270},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":385},{"krate":0,"index":391},{"krate":0,"index":390},{"krate":0,"index":388},{"krate":0,"index":346},{"krate":0,"index":374},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":376},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":491},{"krate":0,"index":497},{"krate":0,"index":496},{"krate":0,"index":494},{"krate":0,"index":452},{"krate":0,"index":480},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":482},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":594},{"krate":0,"index":600},{"krate":0,"index":599},{"krate":0,"index":597},{"krate":0,"index":555},{"krate":0,"index":583},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":585},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":651},{"krate":0,"index":548},{"krate":0,"index":700},{"krate":0,"index":706},{"krate":0,"index":705},{"krate":0,"index":703},{"krate":0,"index":661},{"krate":0,"index":689},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":691},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":757},{"krate":0,"index":654},{"krate":0,"index":806},{"krate":0,"index":812},{"krate":0,"index":811},{"krate":0,"index":809},{"krate":0,"index":767},{"krate":0,"index":795},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":797},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":863},{"krate":0,"index":760},{"krate":0,"index":912},{"krate":0,"index":918},{"krate":0,"index":917},{"krate":0,"index":915},{"krate":0,"index":873},{"krate":0,"index":901},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":903},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":969},{"krate":0,"index":866},{"krate":0,"index":1018},{"krate":0,"index":1024},{"krate":0,"index":1023},{"krate":0,"index":1021},{"krate":0,"index":979},{"krate":0,"index":1007},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1009},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1075},{"krate":0,"index":972},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234}],"decl_id":null,"docs":" This crate defines simple wrappers around Rust's integer type to guarantee they are used in\n a constant-time fashion. Hence, division and direct comparison of these \"secret\" integers is\n disallowed.","sig":null,"attributes":[{"value":"! This crate defines simple wrappers around Rust's integer type to guarantee they are used in","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":0,"byte_end":95,"line_start":1,"line_end":1,"column_start":1,"column_end":96}},{"value":"! a constant-time fashion. Hence, division and direct comparison of these \"secret\" integers is","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":96,"byte_end":192,"line_start":2,"line_end":2,"column_start":1,"column_end":97}},{"value":"! disallowed.","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":193,"byte_end":208,"line_start":3,"line_end":3,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":209,"byte_end":212,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! These integers are intended to be the go-to type to use when implementing cryptographic","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":213,"byte_end":304,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"! software, as they provide an extra automated check against use of variable-time operations.","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":305,"byte_end":400,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":401,"byte_end":404,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! To use the crate, just import everything (`use secret_integers::*;`) and replace your integer","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":405,"byte_end":502,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"! types with uppercase versions of their names (e.g. `u8` -> `U8`).","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":503,"byte_end":572,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":573,"byte_end":576,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":577,"byte_end":591,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":592,"byte_end":595,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! In order to print information or test code involving your secret integers, you need first to","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":596,"byte_end":692,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"! declassify them. Your crypto code should not contain any `declassify` occurence though to","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":693,"byte_end":786,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"! guarantee constant-timedness. Make sure to specify the type of your literals when classifying","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":787,"byte_end":884,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"! (e.g. `0x36u16`) or else you'll get a casting error.","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":885,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":942,"byte_end":945,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":946,"byte_end":953,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! # use secret_integers::*;","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":954,"byte_end":983,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"! let x = U32::classify(1u32);","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":984,"byte_end":1016,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"! let y : U32 = 2u32.into();","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1017,"byte_end":1047,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"! assert_eq!((x + y).declassify(), 3);","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1048,"byte_end":1088,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1089,"byte_end":1096,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1097,"byte_end":1100,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! Using an illegal operation will get you a compile-time error:","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1101,"byte_end":1166,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```compile_fail","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1171,"byte_end":1190,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"! # use secret_integers::*;","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1191,"byte_end":1220,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"! let x = U32::classify(4u32);","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1221,"byte_end":1253,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"! let y : U32 = 2u32.into();","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1254,"byte_end":1284,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"! assert_eq!((x / y).declassify(), 2);","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1285,"byte_end":1325,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1326,"byte_end":1333,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1334,"byte_end":1337,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! Since indexing arrays and vectors is only possible with `usize`, these secret integers also","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1338,"byte_end":1433,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"! prevent you from using secret values to index memory (which is a breach to constant-timedness","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1434,"byte_end":1531,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"! due to cache behaviour).","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1532,"byte_end":1560,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1565,"byte_end":1572,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! # use secret_integers::*;","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1573,"byte_end":1602,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"! fn xor_block(block1: &mut [U64;16], block2: &[U64;16]) {","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1603,"byte_end":1663,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"!    for i in 0..16 {","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1664,"byte_end":1687,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"!      block1[i] ^= block2[i]","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1688,"byte_end":1719,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"!    }","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1720,"byte_end":1728,"line_start":43,"line_end":43,"column_start":1,"column_end":9}},{"value":"! }","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1729,"byte_end":1734,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1735,"byte_end":1742,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! See the [Dalek](https://github.com/denismerigoux/rust-secret-integers/tree/master/examples/dalek.rs)","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1743,"byte_end":1847,"line_start":46,"line_end":46,"column_start":1,"column_end":105}},{"value":"! and [Chacha20](https://github.com/denismerigoux/rust-secret-integers/tree/master/examples/chacha20.rs)","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1848,"byte_end":1954,"line_start":47,"line_end":47,"column_start":1,"column_end":107}},{"value":"! examples for more details on how to use this crate.","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":1955,"byte_end":2010,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2011,"byte_end":2014,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2015,"byte_end":2018,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! # Const-compatibility","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2019,"byte_end":2044,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2045,"byte_end":2048,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! Because stable Rust does not allow constant functions for now, it is impossible to use those","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2049,"byte_end":2145,"line_start":53,"line_end":53,"column_start":1,"column_end":97}},{"value":"! wrappers in const declarations. Even classifying directly inside the declaration does not work:","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2146,"byte_end":2245,"line_start":54,"line_end":54,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2246,"byte_end":2249,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```compile_fail","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2250,"byte_end":2269,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"! const IV : [U32;2] = [U32::classify(0xbe6548u32),U32::classify(0xaec6d48u32)]","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2270,"byte_end":2351,"line_start":57,"line_end":57,"column_start":1,"column_end":82}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2352,"byte_end":2359,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2360,"byte_end":2363,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! For now, the solution is to map your const items with `classify` once you're inside a function,","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2364,"byte_end":2463,"line_start":60,"line_end":60,"column_start":1,"column_end":100}},{"value":"! or call `into`.","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2464,"byte_end":2483,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2484,"byte_end":2487,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2488,"byte_end":2495,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! # use secret_integers::*;","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2496,"byte_end":2525,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"! const IV : [u32;2] = [0xbe6548, 0xaec6d48];","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2526,"byte_end":2573,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2574,"byte_end":2577,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! fn start_cipher(plain: &mut Vec<U32>) {","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2578,"byte_end":2621,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"!    for i in 0..plain.len() {","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2622,"byte_end":2654,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!      plain[i] = plain[i] | (plain[i] ^ IV[i].into());","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2655,"byte_end":2712,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"!    }","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2713,"byte_end":2721,"line_start":70,"line_end":70,"column_start":1,"column_end":9}},{"value":"! }","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2722,"byte_end":2727,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2728,"byte_end":2735,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2736,"byte_end":2739,"line_start":73,"line_end":73,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":15992,"byte_end":15994,"line_start":448,"line_end":448,"column_start":33,"column_end":35},"name":"U8","qualname":"::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16036,"byte_end":16039,"line_start":449,"line_end":449,"column_start":33,"column_end":36},"name":"U16","qualname":"::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16083,"byte_end":16086,"line_start":450,"line_end":450,"column_start":33,"column_end":36},"name":"U32","qualname":"::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16130,"byte_end":16133,"line_start":451,"line_end":451,"column_start":33,"column_end":36},"name":"U64","qualname":"::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16177,"byte_end":16181,"line_start":452,"line_end":452,"column_start":33,"column_end":37},"name":"U128","qualname":"::U128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16225,"byte_end":16227,"line_start":453,"line_end":453,"column_start":31,"column_end":33},"name":"I8","qualname":"::I8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16267,"byte_end":16270,"line_start":454,"line_end":454,"column_start":31,"column_end":34},"name":"I16","qualname":"::I16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16312,"byte_end":16315,"line_start":455,"line_end":455,"column_start":31,"column_end":34},"name":"I32","qualname":"::I32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":912},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16357,"byte_end":16360,"line_start":456,"line_end":456,"column_start":31,"column_end":34},"name":"I64","qualname":"::I64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":16402,"byte_end":16406,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"name":"I128","qualname":"::I128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2745,"byte_end":2748,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2750,"byte_end":2753,"line_start":75,"line_end":75,"column_start":10,"column_end":13},"ref_id":{"krate":1,"index":3583}},{"kind":"Mod","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2769,"byte_end":2772,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"hacspec/secret-integers/src/lib.rs","byte_start":2774,"byte_end":2777,"line_start":76,"line_end":76,"column_start":10,"column_end":13},"ref_id":{"krate":2,"index":1944}}],"macro_refs":[],"relations":[]}